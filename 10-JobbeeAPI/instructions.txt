Steps:
1. first create the project folder - 10-JobbeeAPI
2. run npm init to set the package.json folder with its metadata
3. create app.js file to run the server
4. create basic express and dotenv template on js file
5. create a config folder with .env file to stores the environment variables - PORT and NODE_ENV
6. run npm install express dotenv --save - --save flag writes express and dotenv on package.json dependencies
7. start the server to test the basic template (node app.js or node index.js, depending the project main file)
8. install nodemon devDependencie - npm install nodemon --save-dev (-dev tells node that this package is just for development mode, i.e. in
   production mode it doesnt need to be installed)
9. in package.json, creates the three basic npm run scripts (start, dev and prod)
10. create the basic route, which url starts with "/api/v1". This is because we are developing an api and it is the first version. When we update
    the api version we just need to change this path, while the last version path we keep saved
11. The routes are created in a separated file
12. Create the controller of the basic route -> The controller is where the route is defined and the route is the file witch connects the url
    with the definition(controller) and the http method
13. Installed mongodb and mongodb compass (mongodb gui). After that I created the database config file and imported it to the main file (app.js),
    calling the imported function after that. Finnaly, I tested the api and connected the database via mongodb gui, to make sure it is working.
14. I created the first middleware - on app.js -, witch is a glocal middleware - it is used in every api call. Middleware is a function that works
    like the apis gateway. It is used to authentication, to verify the user to ensure security and scalability, and other things more.